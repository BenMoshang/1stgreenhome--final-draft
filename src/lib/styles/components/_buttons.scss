// styles/components/_buttons.scss
// --------------------------------------------------------------
// Button Component
// --------------------------------------------------------------

/**
 * Accessible, themeable button with variants and icon support.
 * - Supports fill & outline modes
 * - Configurable sizes via modifiers
 * - Icon padding helpers
 * - Consistent spacing based on design system
 * Usage: <button class="u_button u_button--fill u_button--lg u_button--start-icon">...
 */

@use 'sass:math';
@use '../base/globals';
@use '../appearance/colors';
@use '../base/scale';

// Button size configurations
$btn-sizes: (
  md: (
    font: globals.size('md'),
    padding-v: globals.size('sm'),
    padding-h: globals.size('md')
  ),
  lg: (
    font: globals.round-to(globals.size('md') * globals.$MAJOR-QUARTER),
    padding-v: globals.size('md'),
    padding-h: globals.size('lg')
  )
);

// Icon padding configuration
$btn-icon-positions: (
  start: ('sm', 'md'),
  end: ('md', 'sm')
);

.u_button {
  // Base styles
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  color: var(--primary);
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 9999px;
  cursor: pointer;
  text-decoration: none;
  touch-action: manipulation;
  
  // Default size (md)
  $default-size: map-get($btn-sizes, md);
  padding: globals.round-to(map-get($default-size, padding-v) / globals.$MAJOR-HALF) 
           globals.round-to(map-get($default-size, padding-h));
  font-size: globals.round-to(map-get($default-size, font));
  
  // Variants
  &--fill {
    background-color: var(--primary);
    color: var(--on-primary);
  }
  
  &--outline {
    border-color: var(--outline);
    color: var(--primary);
  }
  
  // Size variants
  @each $size, $config in $btn-sizes {
    &--#{$size} {
      padding: globals.round-to(map-get($config, padding-v) / globals.$MAJOR-HALF) 
               globals.round-to(map-get($config, padding-h));
      font-size: globals.round-to(map-get($config, font));
    }
  }
  
  // Icon position variants
  @each $position, $padding in $btn-icon-positions {
    &--#{$position}-icon {
      padding-inline: globals.round-to(globals.size(nth($padding, 1))) 
                      globals.round-to(globals.size(nth($padding, 2)));
    }
  }
}

// Content and icon wrappers
.u_button__content,
.u_button__icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
