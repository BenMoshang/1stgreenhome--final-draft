// Central gap logic and utilities moved from _flex.scss
@use '../base/globals';
@use 'sass:map';

// Legacy and custom gap logic (if needed)
$gap-sizes: (
  'xs': calc(#{globals.size('2xs')} * #{globals.$MAJOR-HALF}),
  'sm': calc(#{globals.size('xs')} * #{globals.$MAJOR-HALF}),
  'md': calc(#{globals.size('sm')} * #{globals.$MAJOR-HALF}),
  'lg': calc(#{globals.size('md')} * #{globals.$MAJOR-HALF}),
  'xl': calc(#{globals.size('lg')} * #{globals.$MAJOR-HALF}),
  '2xl': calc(#{globals.size('xl')} * #{globals.$MAJOR-HALF}),
); 
@function gap($size-key) {
  @if map.has-key($gap-sizes, $size-key) {
    $base-gap: map.get($gap-sizes, $size-key);
    @return $base-gap;
  } @else {
    @warn "Invalid gap key '#{$size-key}'. Valid keys: #{map.keys($gap-sizes)}";
    @return null;
  }
}

// 2. Generate :root gap variables based on spacing scale
:root {
  @each $name, $value in $gap-sizes {
    --gap-#{$name}: #{$value};
  }
}



// 4. Old gap utility classes (for backward compatibility)
@each $name, $size in $gap-sizes {
  .u_gap__#{$name} {
    gap: $size;
  }
  .u_gap-column__#{$name} {
    column-gap: $size;
  }
  .u_gap-row__#{$name} {
    row-gap: $size;
  }
}
