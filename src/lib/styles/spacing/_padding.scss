// ===========================================================================
// styles/spacing/_padding.scss
// Padding utilities following the project's scale system.
// ===========================================================================

@use 'sass:map';
@use '../base/scale' as scale;
@use 'variables' as spacing-vars;

// Padding utility classes
// Example usage: .p-md, .p-inline-lg, .p-block-sm

$padding-sizes: (
  'none': 0,
  '2xs': spacing-vars.spacing('2xs'),
  'xs': spacing-vars.spacing('xs'),
  'sm': spacing-vars.spacing('sm'),
  'md': spacing-vars.spacing('md'),
  'lg': spacing-vars.spacing('lg'),
  'xl': spacing-vars.spacing('xl'),
  '2xl': spacing-vars.spacing('2xl'),
);

// Generates padding utility classes
@each $name, $size in $padding-sizes {
  .p-#{$name} {
    padding: $size;
  }

  .p-inline__#{$name} {
    padding-inline: $size;
  }

  .p-block__#{$name} {
    padding-block: $size;
  }

  .p-left__#{$name} {
    padding-inline-start: $size;
  }

  .p-right__#{$name} {
    padding-inline-end: $size;
  }

  .p-top__#{$name} {
    padding-block-start: $size;
  }

  .p-bottom__#{$name} {
    padding-block-end: $size;
  }
}

// Helper function to adjust padding based on context
// This function is hidden from forwarding in _index.scss
@function adjust-to($base-size, $context) {
  @return if($context == 'mobile', $base-size * 0.75, $base-size);
}
