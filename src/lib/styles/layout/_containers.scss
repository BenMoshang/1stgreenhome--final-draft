@use 'sass:math';
@use 'sass:map';
@use '../base' as globals;

$_WIDTH: globals.$PAGE_MAX_INLINE;

$container-scales: (
  'xs': round(math.div($_WIDTH, globals.$MAJOR-HALF)),
  'sm': round(math.div($_WIDTH, globals.$MAJOR-QUARTER)),
  'md': 1,
  'lg': round($_WIDTH * globals.$MAJOR-QUARTER),
  'xl': round($_WIDTH * globals.$MAJOR-HALF),
);

// Generate CSS variables for container sizes
:root {
  @each $key, $scale in $container-scales {
    --container-#{$key}: #{$scale};
  }
}

// Shared margin-inline placeholder
%_margin-inline {
  margin-inline: auto;
}

// Container size retrieval function
@function container($key) {
  @return map.get($container-scales, $key);
}

// Generate container utility classes
@each $key, $scale in $container-scales {
  .u_container__#{$key} {
    @extend %_margin-inline;
    max-inline-size: var(--container-#{$key});
  }
}
